// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: domain_group.proto

package domaingroup

import (
	reflect "reflect"
	sync "sync"

	apicommon "github.com/Tencent-media-asset-system-sdk/media-platform-sdk-go/protobuf-spec/apicommon"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateDomainGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainGroupDescription string `protobuf:"bytes,1,opt,name=DomainGroupDescription,proto3" json:"DomainGroupDescription,omitempty"` // 群组简介
}

func (x *CreateDomainGroupRequest) Reset() {
	*x = CreateDomainGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_group_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDomainGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDomainGroupRequest) ProtoMessage() {}

func (x *CreateDomainGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_domain_group_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDomainGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateDomainGroupRequest) Descriptor() ([]byte, []int) {
	return file_domain_group_proto_rawDescGZIP(), []int{0}
}

func (x *CreateDomainGroupRequest) GetDomainGroupDescription() string {
	if x != nil {
		return x.DomainGroupDescription
	}
	return ""
}

type CreateDomainGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperateResponse *apicommon.OperateResponse `protobuf:"bytes,1,opt,name=OperateResponse,proto3" json:"OperateResponse,omitempty"`
	DomainGroupId   string                     `protobuf:"bytes,2,opt,name=DomainGroupId,proto3" json:"DomainGroupId,omitempty"` // 返回的群组Id
}

func (x *CreateDomainGroupResponse) Reset() {
	*x = CreateDomainGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_group_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDomainGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDomainGroupResponse) ProtoMessage() {}

func (x *CreateDomainGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_group_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDomainGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateDomainGroupResponse) Descriptor() ([]byte, []int) {
	return file_domain_group_proto_rawDescGZIP(), []int{1}
}

func (x *CreateDomainGroupResponse) GetOperateResponse() *apicommon.OperateResponse {
	if x != nil {
		return x.OperateResponse
	}
	return nil
}

func (x *CreateDomainGroupResponse) GetDomainGroupId() string {
	if x != nil {
		return x.DomainGroupId
	}
	return ""
}

type DescribeDomainGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNumber uint32              `protobuf:"varint,1,opt,name=PageNumber,proto3" json:"PageNumber,omitempty"` // 分页Id
	PageSize   uint32              `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`     // 分页的大小
	SorterSet  []*apicommon.Sorter `protobuf:"bytes,3,rep,name=SorterSet,proto3" json:"SorterSet,omitempty"`    // 排序条件
}

func (x *DescribeDomainGroupsRequest) Reset() {
	*x = DescribeDomainGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_group_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeDomainGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeDomainGroupsRequest) ProtoMessage() {}

func (x *DescribeDomainGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_domain_group_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeDomainGroupsRequest.ProtoReflect.Descriptor instead.
func (*DescribeDomainGroupsRequest) Descriptor() ([]byte, []int) {
	return file_domain_group_proto_rawDescGZIP(), []int{2}
}

func (x *DescribeDomainGroupsRequest) GetPageNumber() uint32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *DescribeDomainGroupsRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *DescribeDomainGroupsRequest) GetSorterSet() []*apicommon.Sorter {
	if x != nil {
		return x.SorterSet
	}
	return nil
}

type DoaminGroupObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainGroupId          string              `protobuf:"bytes,1,opt,name=DomainGroupId,proto3" json:"DomainGroupId,omitempty"`                   // 群组Id
	DomainGroupDescription string              `protobuf:"bytes,2,opt,name=DomainGroupDescription,proto3" json:"DomainGroupDescription,omitempty"` // 群组描述
	DoaminGroupMediaCount  uint32              `protobuf:"varint,3,opt,name=DoaminGroupMediaCount,proto3" json:"DoaminGroupMediaCount,omitempty"`  // 群组下的资源个数
	DoaminGroupMediaIdSet  []string            `protobuf:"bytes,4,rep,name=DoaminGroupMediaIdSet,proto3" json:"DoaminGroupMediaIdSet,omitempty"`   // 群组下的资源Id集合
	DoaminGroupCreateTime  string              `protobuf:"bytes,5,opt,name=DoaminGroupCreateTime,proto3" json:"DoaminGroupCreateTime,omitempty"`   // 群组创建时间
	DoaminGroupModifyTime  string              `protobuf:"bytes,6,opt,name=DoaminGroupModifyTime,proto3" json:"DoaminGroupModifyTime,omitempty"`   // 群组修改时间
	CreateUserInfo         *apicommon.UserInfo `protobuf:"bytes,7,opt,name=CreateUserInfo,proto3" json:"CreateUserInfo,omitempty"`                 // 群组的创建者信息
	ModifyUserInfo         *apicommon.UserInfo `protobuf:"bytes,8,opt,name=ModifyUserInfo,proto3" json:"ModifyUserInfo,omitempty"`                 // 群组的修改者信息
}

func (x *DoaminGroupObject) Reset() {
	*x = DoaminGroupObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_group_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoaminGroupObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoaminGroupObject) ProtoMessage() {}

func (x *DoaminGroupObject) ProtoReflect() protoreflect.Message {
	mi := &file_domain_group_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoaminGroupObject.ProtoReflect.Descriptor instead.
func (*DoaminGroupObject) Descriptor() ([]byte, []int) {
	return file_domain_group_proto_rawDescGZIP(), []int{3}
}

func (x *DoaminGroupObject) GetDomainGroupId() string {
	if x != nil {
		return x.DomainGroupId
	}
	return ""
}

func (x *DoaminGroupObject) GetDomainGroupDescription() string {
	if x != nil {
		return x.DomainGroupDescription
	}
	return ""
}

func (x *DoaminGroupObject) GetDoaminGroupMediaCount() uint32 {
	if x != nil {
		return x.DoaminGroupMediaCount
	}
	return 0
}

func (x *DoaminGroupObject) GetDoaminGroupMediaIdSet() []string {
	if x != nil {
		return x.DoaminGroupMediaIdSet
	}
	return nil
}

func (x *DoaminGroupObject) GetDoaminGroupCreateTime() string {
	if x != nil {
		return x.DoaminGroupCreateTime
	}
	return ""
}

func (x *DoaminGroupObject) GetDoaminGroupModifyTime() string {
	if x != nil {
		return x.DoaminGroupModifyTime
	}
	return ""
}

func (x *DoaminGroupObject) GetCreateUserInfo() *apicommon.UserInfo {
	if x != nil {
		return x.CreateUserInfo
	}
	return nil
}

func (x *DoaminGroupObject) GetModifyUserInfo() *apicommon.UserInfo {
	if x != nil {
		return x.ModifyUserInfo
	}
	return nil
}

type DescribeDomainGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperateResponse      *apicommon.OperateResponse `protobuf:"bytes,1,opt,name=OperateResponse,proto3" json:"OperateResponse,omitempty"`
	DoaminGroupObjectSet []*DoaminGroupObject       `protobuf:"bytes,2,rep,name=DoaminGroupObjectSet,proto3" json:"DoaminGroupObjectSet,omitempty"` // 返回的群组信息
}

func (x *DescribeDomainGroupsResponse) Reset() {
	*x = DescribeDomainGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_group_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeDomainGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeDomainGroupsResponse) ProtoMessage() {}

func (x *DescribeDomainGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_group_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeDomainGroupsResponse.ProtoReflect.Descriptor instead.
func (*DescribeDomainGroupsResponse) Descriptor() ([]byte, []int) {
	return file_domain_group_proto_rawDescGZIP(), []int{4}
}

func (x *DescribeDomainGroupsResponse) GetOperateResponse() *apicommon.OperateResponse {
	if x != nil {
		return x.OperateResponse
	}
	return nil
}

func (x *DescribeDomainGroupsResponse) GetDoaminGroupObjectSet() []*DoaminGroupObject {
	if x != nil {
		return x.DoaminGroupObjectSet
	}
	return nil
}

type DescribeDomainGroupDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainGroupIdSet []string `protobuf:"bytes,1,rep,name=DomainGroupIdSet,proto3" json:"DomainGroupIdSet,omitempty"` // 群组Id
}

func (x *DescribeDomainGroupDetailsRequest) Reset() {
	*x = DescribeDomainGroupDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_group_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeDomainGroupDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeDomainGroupDetailsRequest) ProtoMessage() {}

func (x *DescribeDomainGroupDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_domain_group_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeDomainGroupDetailsRequest.ProtoReflect.Descriptor instead.
func (*DescribeDomainGroupDetailsRequest) Descriptor() ([]byte, []int) {
	return file_domain_group_proto_rawDescGZIP(), []int{5}
}

func (x *DescribeDomainGroupDetailsRequest) GetDomainGroupIdSet() []string {
	if x != nil {
		return x.DomainGroupIdSet
	}
	return nil
}

type DescribeDomainGroupDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperateResponse      *apicommon.OperateResponse `protobuf:"bytes,1,opt,name=OperateResponse,proto3" json:"OperateResponse,omitempty"`
	DoaminGroupObjectSet []*DoaminGroupObject       `protobuf:"bytes,2,rep,name=DoaminGroupObjectSet,proto3" json:"DoaminGroupObjectSet,omitempty"` // 返回的群组信息
}

func (x *DescribeDomainGroupDetailsResponse) Reset() {
	*x = DescribeDomainGroupDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_group_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeDomainGroupDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeDomainGroupDetailsResponse) ProtoMessage() {}

func (x *DescribeDomainGroupDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_group_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeDomainGroupDetailsResponse.ProtoReflect.Descriptor instead.
func (*DescribeDomainGroupDetailsResponse) Descriptor() ([]byte, []int) {
	return file_domain_group_proto_rawDescGZIP(), []int{6}
}

func (x *DescribeDomainGroupDetailsResponse) GetOperateResponse() *apicommon.OperateResponse {
	if x != nil {
		return x.OperateResponse
	}
	return nil
}

func (x *DescribeDomainGroupDetailsResponse) GetDoaminGroupObjectSet() []*DoaminGroupObject {
	if x != nil {
		return x.DoaminGroupObjectSet
	}
	return nil
}

type AddMediasToDomainGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaIdSet       []string `protobuf:"bytes,1,rep,name=MediaIdSet,proto3" json:"MediaIdSet,omitempty"`             // 资源Id集合
	DomainGroupIdSet []string `protobuf:"bytes,4,rep,name=DomainGroupIdSet,proto3" json:"DomainGroupIdSet,omitempty"` // 群组集合
}

func (x *AddMediasToDomainGroupsRequest) Reset() {
	*x = AddMediasToDomainGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_group_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMediasToDomainGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMediasToDomainGroupsRequest) ProtoMessage() {}

func (x *AddMediasToDomainGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_domain_group_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMediasToDomainGroupsRequest.ProtoReflect.Descriptor instead.
func (*AddMediasToDomainGroupsRequest) Descriptor() ([]byte, []int) {
	return file_domain_group_proto_rawDescGZIP(), []int{7}
}

func (x *AddMediasToDomainGroupsRequest) GetMediaIdSet() []string {
	if x != nil {
		return x.MediaIdSet
	}
	return nil
}

func (x *AddMediasToDomainGroupsRequest) GetDomainGroupIdSet() []string {
	if x != nil {
		return x.DomainGroupIdSet
	}
	return nil
}

type AddMediasToDomainGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperateResponse *apicommon.OperateResponse `protobuf:"bytes,1,opt,name=OperateResponse,proto3" json:"OperateResponse,omitempty"`
}

func (x *AddMediasToDomainGroupsResponse) Reset() {
	*x = AddMediasToDomainGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_group_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMediasToDomainGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMediasToDomainGroupsResponse) ProtoMessage() {}

func (x *AddMediasToDomainGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_group_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMediasToDomainGroupsResponse.ProtoReflect.Descriptor instead.
func (*AddMediasToDomainGroupsResponse) Descriptor() ([]byte, []int) {
	return file_domain_group_proto_rawDescGZIP(), []int{8}
}

func (x *AddMediasToDomainGroupsResponse) GetOperateResponse() *apicommon.OperateResponse {
	if x != nil {
		return x.OperateResponse
	}
	return nil
}

type RemoveMediasFromDomainGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaIdSet       []string `protobuf:"bytes,1,rep,name=MediaIdSet,proto3" json:"MediaIdSet,omitempty"`             // 资源Id集合
	DomainGroupIdSet []string `protobuf:"bytes,4,rep,name=DomainGroupIdSet,proto3" json:"DomainGroupIdSet,omitempty"` // 群组集合
}

func (x *RemoveMediasFromDomainGroupsRequest) Reset() {
	*x = RemoveMediasFromDomainGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_group_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMediasFromDomainGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMediasFromDomainGroupsRequest) ProtoMessage() {}

func (x *RemoveMediasFromDomainGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_domain_group_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMediasFromDomainGroupsRequest.ProtoReflect.Descriptor instead.
func (*RemoveMediasFromDomainGroupsRequest) Descriptor() ([]byte, []int) {
	return file_domain_group_proto_rawDescGZIP(), []int{9}
}

func (x *RemoveMediasFromDomainGroupsRequest) GetMediaIdSet() []string {
	if x != nil {
		return x.MediaIdSet
	}
	return nil
}

func (x *RemoveMediasFromDomainGroupsRequest) GetDomainGroupIdSet() []string {
	if x != nil {
		return x.DomainGroupIdSet
	}
	return nil
}

type RemoveMediasFromDomainGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperateResponse *apicommon.OperateResponse `protobuf:"bytes,1,opt,name=OperateResponse,proto3" json:"OperateResponse,omitempty"`
}

func (x *RemoveMediasFromDomainGroupsResponse) Reset() {
	*x = RemoveMediasFromDomainGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_group_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMediasFromDomainGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMediasFromDomainGroupsResponse) ProtoMessage() {}

func (x *RemoveMediasFromDomainGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_group_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMediasFromDomainGroupsResponse.ProtoReflect.Descriptor instead.
func (*RemoveMediasFromDomainGroupsResponse) Descriptor() ([]byte, []int) {
	return file_domain_group_proto_rawDescGZIP(), []int{10}
}

func (x *RemoveMediasFromDomainGroupsResponse) GetOperateResponse() *apicommon.OperateResponse {
	if x != nil {
		return x.OperateResponse
	}
	return nil
}

type DeleteDomainGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deleter *apicommon.Deleter `protobuf:"bytes,1,opt,name=Deleter,proto3" json:"Deleter,omitempty"` //删除类型
}

func (x *DeleteDomainGroupsRequest) Reset() {
	*x = DeleteDomainGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_group_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDomainGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDomainGroupsRequest) ProtoMessage() {}

func (x *DeleteDomainGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_domain_group_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDomainGroupsRequest.ProtoReflect.Descriptor instead.
func (*DeleteDomainGroupsRequest) Descriptor() ([]byte, []int) {
	return file_domain_group_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteDomainGroupsRequest) GetDeleter() *apicommon.Deleter {
	if x != nil {
		return x.Deleter
	}
	return nil
}

type DomainGroupOperateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainGroupId   string                     `protobuf:"bytes,1,opt,name=DomainGroupId,proto3" json:"DomainGroupId,omitempty"` // 群组Id
	OperateResponse *apicommon.OperateResponse `protobuf:"bytes,2,opt,name=OperateResponse,proto3" json:"OperateResponse,omitempty"`
}

func (x *DomainGroupOperateResponse) Reset() {
	*x = DomainGroupOperateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_group_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainGroupOperateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainGroupOperateResponse) ProtoMessage() {}

func (x *DomainGroupOperateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_group_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainGroupOperateResponse.ProtoReflect.Descriptor instead.
func (*DomainGroupOperateResponse) Descriptor() ([]byte, []int) {
	return file_domain_group_proto_rawDescGZIP(), []int{12}
}

func (x *DomainGroupOperateResponse) GetDomainGroupId() string {
	if x != nil {
		return x.DomainGroupId
	}
	return ""
}

func (x *DomainGroupOperateResponse) GetOperateResponse() *apicommon.OperateResponse {
	if x != nil {
		return x.OperateResponse
	}
	return nil
}

type DeleteDomainGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainGroupOperateResponse []*DomainGroupOperateResponse `protobuf:"bytes,1,rep,name=DomainGroupOperateResponse,proto3" json:"DomainGroupOperateResponse,omitempty"`
}

func (x *DeleteDomainGroupsResponse) Reset() {
	*x = DeleteDomainGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_group_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDomainGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDomainGroupsResponse) ProtoMessage() {}

func (x *DeleteDomainGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_group_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDomainGroupsResponse.ProtoReflect.Descriptor instead.
func (*DeleteDomainGroupsResponse) Descriptor() ([]byte, []int) {
	return file_domain_group_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteDomainGroupsResponse) GetDomainGroupOperateResponse() []*DomainGroupOperateResponse {
	if x != nil {
		return x.DomainGroupOperateResponse
	}
	return nil
}

type ModifyDomainGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaId                string `protobuf:"bytes,1,opt,name=MediaId,proto3" json:"MediaId,omitempty"`                               // 资源Id
	DomainGroupDescription string `protobuf:"bytes,2,opt,name=DomainGroupDescription,proto3" json:"DomainGroupDescription,omitempty"` // 修改后的群组描述
}

func (x *ModifyDomainGroupRequest) Reset() {
	*x = ModifyDomainGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_group_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyDomainGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyDomainGroupRequest) ProtoMessage() {}

func (x *ModifyDomainGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_domain_group_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyDomainGroupRequest.ProtoReflect.Descriptor instead.
func (*ModifyDomainGroupRequest) Descriptor() ([]byte, []int) {
	return file_domain_group_proto_rawDescGZIP(), []int{14}
}

func (x *ModifyDomainGroupRequest) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *ModifyDomainGroupRequest) GetDomainGroupDescription() string {
	if x != nil {
		return x.DomainGroupDescription
	}
	return ""
}

type ModifyDomainGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperateResponse *apicommon.OperateResponse `protobuf:"bytes,1,opt,name=OperateResponse,proto3" json:"OperateResponse,omitempty"`
}

func (x *ModifyDomainGroupResponse) Reset() {
	*x = ModifyDomainGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_group_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyDomainGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyDomainGroupResponse) ProtoMessage() {}

func (x *ModifyDomainGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_group_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyDomainGroupResponse.ProtoReflect.Descriptor instead.
func (*ModifyDomainGroupResponse) Descriptor() ([]byte, []int) {
	return file_domain_group_proto_rawDescGZIP(), []int{15}
}

func (x *ModifyDomainGroupResponse) GetOperateResponse() *apicommon.OperateResponse {
	if x != nil {
		return x.OperateResponse
	}
	return nil
}

var File_domain_group_proto protoreflect.FileDescriptor

var file_domain_group_proto_rawDesc = []byte{
	0x0a, 0x12, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x0c, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x52, 0x0a, 0x18, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8f,
	0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0f,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x22, 0x92, 0x01, 0x0a, 0x1b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x37, 0x0a, 0x09,
	0x53, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x52, 0x09, 0x53, 0x6f, 0x72, 0x74,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x22, 0xd3, 0x03, 0x0a, 0x11, 0x44, 0x6f, 0x61, 0x6d, 0x69, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x36, 0x0a, 0x16, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x16, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x15, 0x44, 0x6f, 0x61,
	0x6d, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x44, 0x6f, 0x61, 0x6d, 0x69, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x34, 0x0a, 0x15, 0x44, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x49, 0x64, 0x53, 0x65, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15,
	0x44, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x49, 0x64, 0x53, 0x65, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x44, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x44, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x44,
	0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x44, 0x6f, 0x61, 0x6d,
	0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x43, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x43, 0x0a, 0x0e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xcb, 0x01, 0x0a, 0x1c,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0f,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x14, 0x44, 0x6f,
	0x61, 0x6d, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x44, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x14, 0x44, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x74, 0x22, 0x4f, 0x0a, 0x21, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a,
	0x0a, 0x10, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x53,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x53, 0x65, 0x74, 0x22, 0xd1, 0x01, 0x0a, 0x22, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4c, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0f,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5d, 0x0a, 0x14, 0x44, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x44, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x14, 0x44, 0x6f, 0x61, 0x6d, 0x69, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x74, 0x22, 0x6c,
	0x0a, 0x1e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x54, 0x6f, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x53, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x53, 0x65, 0x74,
	0x12, 0x2a, 0x0a, 0x10, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x53, 0x65, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x53, 0x65, 0x74, 0x22, 0x6f, 0x0a, 0x1f,
	0x41, 0x64, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x54, 0x6f, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4c, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0f, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x71, 0x0a,
	0x23, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x46, 0x72, 0x6f,
	0x6d, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x53,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49,
	0x64, 0x53, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x53, 0x65, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x53, 0x65, 0x74,
	0x22, 0x74, 0x0a, 0x24, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73,
	0x46, 0x72, 0x6f, 0x6d, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x72,
	0x52, 0x07, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x72, 0x22, 0x90, 0x01, 0x0a, 0x1a, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x4c,
	0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0f, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x90, 0x01, 0x0a,
	0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x1a, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x1a, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x6c, 0x0a, 0x18, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x16, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x69, 0x0a,
	0x19, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0f, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xc1, 0x07, 0x0a, 0x0b, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x78, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x30, 0x2e,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x33, 0x2e, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x34, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x39, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3a, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8a, 0x01, 0x0a,
	0x17, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x54, 0x6f, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x36, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x54, 0x6f, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x37, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x73, 0x54, 0x6f, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x99, 0x01, 0x0a, 0x1c, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x3b, 0x2e, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73,
	0x46, 0x72, 0x6f, 0x6d, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x46, 0x72, 0x6f,
	0x6d, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x31, 0x2e, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32,
	0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x78, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x30, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x5a, 0x5f,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54, 0x65, 0x6e, 0x63, 0x65,
	0x6e, 0x74, 0x2d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2d, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2d, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2d,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2d, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_domain_group_proto_rawDescOnce sync.Once
	file_domain_group_proto_rawDescData = file_domain_group_proto_rawDesc
)

func file_domain_group_proto_rawDescGZIP() []byte {
	file_domain_group_proto_rawDescOnce.Do(func() {
		file_domain_group_proto_rawDescData = protoimpl.X.CompressGZIP(file_domain_group_proto_rawDescData)
	})
	return file_domain_group_proto_rawDescData
}

var file_domain_group_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_domain_group_proto_goTypes = []interface{}{
	(*CreateDomainGroupRequest)(nil),             // 0: trpc.media.domaingroup.CreateDomainGroupRequest
	(*CreateDomainGroupResponse)(nil),            // 1: trpc.media.domaingroup.CreateDomainGroupResponse
	(*DescribeDomainGroupsRequest)(nil),          // 2: trpc.media.domaingroup.DescribeDomainGroupsRequest
	(*DoaminGroupObject)(nil),                    // 3: trpc.media.domaingroup.DoaminGroupObject
	(*DescribeDomainGroupsResponse)(nil),         // 4: trpc.media.domaingroup.DescribeDomainGroupsResponse
	(*DescribeDomainGroupDetailsRequest)(nil),    // 5: trpc.media.domaingroup.DescribeDomainGroupDetailsRequest
	(*DescribeDomainGroupDetailsResponse)(nil),   // 6: trpc.media.domaingroup.DescribeDomainGroupDetailsResponse
	(*AddMediasToDomainGroupsRequest)(nil),       // 7: trpc.media.domaingroup.AddMediasToDomainGroupsRequest
	(*AddMediasToDomainGroupsResponse)(nil),      // 8: trpc.media.domaingroup.AddMediasToDomainGroupsResponse
	(*RemoveMediasFromDomainGroupsRequest)(nil),  // 9: trpc.media.domaingroup.RemoveMediasFromDomainGroupsRequest
	(*RemoveMediasFromDomainGroupsResponse)(nil), // 10: trpc.media.domaingroup.RemoveMediasFromDomainGroupsResponse
	(*DeleteDomainGroupsRequest)(nil),            // 11: trpc.media.domaingroup.DeleteDomainGroupsRequest
	(*DomainGroupOperateResponse)(nil),           // 12: trpc.media.domaingroup.DomainGroupOperateResponse
	(*DeleteDomainGroupsResponse)(nil),           // 13: trpc.media.domaingroup.DeleteDomainGroupsResponse
	(*ModifyDomainGroupRequest)(nil),             // 14: trpc.media.domaingroup.ModifyDomainGroupRequest
	(*ModifyDomainGroupResponse)(nil),            // 15: trpc.media.domaingroup.ModifyDomainGroupResponse
	(*apicommon.OperateResponse)(nil),            // 16: trpc.media.common.OperateResponse
	(*apicommon.Sorter)(nil),                     // 17: trpc.media.common.Sorter
	(*apicommon.UserInfo)(nil),                   // 18: trpc.media.common.UserInfo
	(*apicommon.Deleter)(nil),                    // 19: trpc.media.common.Deleter
}
var file_domain_group_proto_depIdxs = []int32{
	16, // 0: trpc.media.domaingroup.CreateDomainGroupResponse.OperateResponse:type_name -> trpc.media.common.OperateResponse
	17, // 1: trpc.media.domaingroup.DescribeDomainGroupsRequest.SorterSet:type_name -> trpc.media.common.Sorter
	18, // 2: trpc.media.domaingroup.DoaminGroupObject.CreateUserInfo:type_name -> trpc.media.common.UserInfo
	18, // 3: trpc.media.domaingroup.DoaminGroupObject.ModifyUserInfo:type_name -> trpc.media.common.UserInfo
	16, // 4: trpc.media.domaingroup.DescribeDomainGroupsResponse.OperateResponse:type_name -> trpc.media.common.OperateResponse
	3,  // 5: trpc.media.domaingroup.DescribeDomainGroupsResponse.DoaminGroupObjectSet:type_name -> trpc.media.domaingroup.DoaminGroupObject
	16, // 6: trpc.media.domaingroup.DescribeDomainGroupDetailsResponse.OperateResponse:type_name -> trpc.media.common.OperateResponse
	3,  // 7: trpc.media.domaingroup.DescribeDomainGroupDetailsResponse.DoaminGroupObjectSet:type_name -> trpc.media.domaingroup.DoaminGroupObject
	16, // 8: trpc.media.domaingroup.AddMediasToDomainGroupsResponse.OperateResponse:type_name -> trpc.media.common.OperateResponse
	16, // 9: trpc.media.domaingroup.RemoveMediasFromDomainGroupsResponse.OperateResponse:type_name -> trpc.media.common.OperateResponse
	19, // 10: trpc.media.domaingroup.DeleteDomainGroupsRequest.Deleter:type_name -> trpc.media.common.Deleter
	16, // 11: trpc.media.domaingroup.DomainGroupOperateResponse.OperateResponse:type_name -> trpc.media.common.OperateResponse
	12, // 12: trpc.media.domaingroup.DeleteDomainGroupsResponse.DomainGroupOperateResponse:type_name -> trpc.media.domaingroup.DomainGroupOperateResponse
	16, // 13: trpc.media.domaingroup.ModifyDomainGroupResponse.OperateResponse:type_name -> trpc.media.common.OperateResponse
	0,  // 14: trpc.media.domaingroup.DomainGroup.CreateDomainGroup:input_type -> trpc.media.domaingroup.CreateDomainGroupRequest
	2,  // 15: trpc.media.domaingroup.DomainGroup.DescribeDomainGroups:input_type -> trpc.media.domaingroup.DescribeDomainGroupsRequest
	5,  // 16: trpc.media.domaingroup.DomainGroup.DescribeDomainGroupDetails:input_type -> trpc.media.domaingroup.DescribeDomainGroupDetailsRequest
	7,  // 17: trpc.media.domaingroup.DomainGroup.AddMediasToDomainGroups:input_type -> trpc.media.domaingroup.AddMediasToDomainGroupsRequest
	9,  // 18: trpc.media.domaingroup.DomainGroup.RemoveMediasFromDomainGroups:input_type -> trpc.media.domaingroup.RemoveMediasFromDomainGroupsRequest
	11, // 19: trpc.media.domaingroup.DomainGroup.DeleteDomainGroups:input_type -> trpc.media.domaingroup.DeleteDomainGroupsRequest
	14, // 20: trpc.media.domaingroup.DomainGroup.ModifyDomainGroup:input_type -> trpc.media.domaingroup.ModifyDomainGroupRequest
	1,  // 21: trpc.media.domaingroup.DomainGroup.CreateDomainGroup:output_type -> trpc.media.domaingroup.CreateDomainGroupResponse
	4,  // 22: trpc.media.domaingroup.DomainGroup.DescribeDomainGroups:output_type -> trpc.media.domaingroup.DescribeDomainGroupsResponse
	6,  // 23: trpc.media.domaingroup.DomainGroup.DescribeDomainGroupDetails:output_type -> trpc.media.domaingroup.DescribeDomainGroupDetailsResponse
	8,  // 24: trpc.media.domaingroup.DomainGroup.AddMediasToDomainGroups:output_type -> trpc.media.domaingroup.AddMediasToDomainGroupsResponse
	10, // 25: trpc.media.domaingroup.DomainGroup.RemoveMediasFromDomainGroups:output_type -> trpc.media.domaingroup.RemoveMediasFromDomainGroupsResponse
	13, // 26: trpc.media.domaingroup.DomainGroup.DeleteDomainGroups:output_type -> trpc.media.domaingroup.DeleteDomainGroupsResponse
	15, // 27: trpc.media.domaingroup.DomainGroup.ModifyDomainGroup:output_type -> trpc.media.domaingroup.ModifyDomainGroupResponse
	21, // [21:28] is the sub-list for method output_type
	14, // [14:21] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_domain_group_proto_init() }
func file_domain_group_proto_init() {
	if File_domain_group_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_domain_group_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDomainGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_group_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDomainGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_group_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeDomainGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_group_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoaminGroupObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_group_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeDomainGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_group_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeDomainGroupDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_group_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeDomainGroupDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_group_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMediasToDomainGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_group_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMediasToDomainGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_group_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMediasFromDomainGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_group_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMediasFromDomainGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_group_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDomainGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_group_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainGroupOperateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_group_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDomainGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_group_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyDomainGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_group_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyDomainGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_domain_group_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_domain_group_proto_goTypes,
		DependencyIndexes: file_domain_group_proto_depIdxs,
		MessageInfos:      file_domain_group_proto_msgTypes,
	}.Build()
	File_domain_group_proto = out.File
	file_domain_group_proto_rawDesc = nil
	file_domain_group_proto_goTypes = nil
	file_domain_group_proto_depIdxs = nil
}
