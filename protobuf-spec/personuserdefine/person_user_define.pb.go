// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: person_user_define.proto

package personuserdefine

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/Tencent-media-asset-system-sdk/media-platform-sdk-go/protobuf-spec/apicommon"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 创建自定义人物库
type CreateUserDefineGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName   string `protobuf:"bytes,5,opt,name=GroupName,proto3" json:"GroupName,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *CreateUserDefineGroupRequest) Reset() {
	*x = CreateUserDefineGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserDefineGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserDefineGroupRequest) ProtoMessage() {}

func (x *CreateUserDefineGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserDefineGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateUserDefineGroupRequest) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{0}
}

func (x *CreateUserDefineGroupRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *CreateUserDefineGroupRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateUserDefineGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID uint32 `protobuf:"varint,3,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
}

func (x *CreateUserDefineGroupResponse) Reset() {
	*x = CreateUserDefineGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserDefineGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserDefineGroupResponse) ProtoMessage() {}

func (x *CreateUserDefineGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserDefineGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateUserDefineGroupResponse) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{1}
}

func (x *CreateUserDefineGroupResponse) GetGroupID() uint32 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

// 查询自定义人物库
type DescribeUserDefineGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SortBy *SortBy `protobuf:"bytes,5,opt,name=SortBy,proto3" json:"SortBy,omitempty"`
}

func (x *DescribeUserDefineGroupRequest) Reset() {
	*x = DescribeUserDefineGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeUserDefineGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeUserDefineGroupRequest) ProtoMessage() {}

func (x *DescribeUserDefineGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeUserDefineGroupRequest.ProtoReflect.Descriptor instead.
func (*DescribeUserDefineGroupRequest) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{2}
}

func (x *DescribeUserDefineGroupRequest) GetSortBy() *SortBy {
	if x != nil {
		return x.SortBy
	}
	return nil
}

type UserDefineGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID     uint32 `protobuf:"varint,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	GroupName   string `protobuf:"bytes,2,opt,name=GroupName,proto3" json:"GroupName,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	PersonCount uint32 `protobuf:"varint,4,opt,name=PersonCount,proto3" json:"PersonCount,omitempty"`
	UpdateTime  string `protobuf:"bytes,5,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	Status      uint32 `protobuf:"varint,6,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *UserDefineGroup) Reset() {
	*x = UserDefineGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDefineGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDefineGroup) ProtoMessage() {}

func (x *UserDefineGroup) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDefineGroup.ProtoReflect.Descriptor instead.
func (*UserDefineGroup) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{3}
}

func (x *UserDefineGroup) GetGroupID() uint32 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *UserDefineGroup) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *UserDefineGroup) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UserDefineGroup) GetPersonCount() uint32 {
	if x != nil {
		return x.PersonCount
	}
	return 0
}

func (x *UserDefineGroup) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *UserDefineGroup) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type DescribeUserDefineGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID            string             `protobuf:"bytes,3,opt,name=GroupID,proto3" json:"GroupID,omitempty"`      // 媒体AI引擎v2.2开始废弃
	ExistFlag          bool               `protobuf:"varint,4,opt,name=ExistFlag,proto3" json:"ExistFlag,omitempty"` // 媒体AI引擎v2.2开始废弃
	UserDefineGroupSet []*UserDefineGroup `protobuf:"bytes,5,rep,name=UserDefineGroupSet,proto3" json:"UserDefineGroupSet,omitempty"`
	TotalCount         uint32             `protobuf:"varint,6,opt,name=TotalCount,proto3" json:"TotalCount,omitempty"`
}

func (x *DescribeUserDefineGroupResponse) Reset() {
	*x = DescribeUserDefineGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeUserDefineGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeUserDefineGroupResponse) ProtoMessage() {}

func (x *DescribeUserDefineGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeUserDefineGroupResponse.ProtoReflect.Descriptor instead.
func (*DescribeUserDefineGroupResponse) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{4}
}

func (x *DescribeUserDefineGroupResponse) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *DescribeUserDefineGroupResponse) GetExistFlag() bool {
	if x != nil {
		return x.ExistFlag
	}
	return false
}

func (x *DescribeUserDefineGroupResponse) GetUserDefineGroupSet() []*UserDefineGroup {
	if x != nil {
		return x.UserDefineGroupSet
	}
	return nil
}

func (x *DescribeUserDefineGroupResponse) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// 删除自定义人物库
type RemoveUserDefineGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID uint32 `protobuf:"varint,5,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
}

func (x *RemoveUserDefineGroupRequest) Reset() {
	*x = RemoveUserDefineGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUserDefineGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserDefineGroupRequest) ProtoMessage() {}

func (x *RemoveUserDefineGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserDefineGroupRequest.ProtoReflect.Descriptor instead.
func (*RemoveUserDefineGroupRequest) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{5}
}

func (x *RemoveUserDefineGroupRequest) GetGroupID() uint32 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

type RemoveUserDefineGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveUserDefineGroupResponse) Reset() {
	*x = RemoveUserDefineGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUserDefineGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserDefineGroupResponse) ProtoMessage() {}

func (x *RemoveUserDefineGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserDefineGroupResponse.ProtoReflect.Descriptor instead.
func (*RemoveUserDefineGroupResponse) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{6}
}

// 更新自定义人物库
type UpdateUserDefineGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID     uint32  `protobuf:"varint,5,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	GroupName   *string `protobuf:"bytes,6,opt,name=GroupName,proto3,oneof" json:"GroupName,omitempty"`
	Description *string `protobuf:"bytes,7,opt,name=Description,proto3,oneof" json:"Description,omitempty"`
	Status      *uint32 `protobuf:"varint,8,opt,name=Status,proto3,oneof" json:"Status,omitempty"`
}

func (x *UpdateUserDefineGroupRequest) Reset() {
	*x = UpdateUserDefineGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserDefineGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserDefineGroupRequest) ProtoMessage() {}

func (x *UpdateUserDefineGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserDefineGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserDefineGroupRequest) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateUserDefineGroupRequest) GetGroupID() uint32 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *UpdateUserDefineGroupRequest) GetGroupName() string {
	if x != nil && x.GroupName != nil {
		return *x.GroupName
	}
	return ""
}

func (x *UpdateUserDefineGroupRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UpdateUserDefineGroupRequest) GetStatus() uint32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

type UpdateUserDefineGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUserDefineGroupResponse) Reset() {
	*x = UpdateUserDefineGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserDefineGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserDefineGroupResponse) ProtoMessage() {}

func (x *UpdateUserDefineGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserDefineGroupResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserDefineGroupResponse) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{8}
}

// 创建自定义人物
type CreateUserDefinePersonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaIdSet   []string `protobuf:"bytes,1,rep,name=MediaIdSet,proto3" json:"MediaIdSet,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	BasicInfo    string   `protobuf:"bytes,3,opt,name=BasicInfo,proto3" json:"BasicInfo,omitempty"`
	Tag1_1       string   `protobuf:"bytes,4,opt,name=Tag1_1,json=Tag11,proto3" json:"Tag1_1,omitempty"`
	Tag1_2       string   `protobuf:"bytes,5,opt,name=Tag1_2,json=Tag12,proto3" json:"Tag1_2,omitempty"`
	RequestId    string   `protobuf:"bytes,6,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	Uin          string   `protobuf:"bytes,7,opt,name=Uin,proto3" json:"Uin,omitempty"`
	TIProjectID  uint32   `protobuf:"varint,8,opt,name=TIProjectID,proto3" json:"TIProjectID,omitempty"`
	TIBusinessID uint32   `protobuf:"varint,9,opt,name=TIBusinessID,proto3" json:"TIBusinessID,omitempty"`
	MediaURLSet  []string `protobuf:"bytes,10,rep,name=MediaURLSet,proto3" json:"MediaURLSet,omitempty"`
	GroupID      uint32   `protobuf:"varint,11,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	Sensitive    int32    `protobuf:"varint,12,opt,name=Sensitive,proto3" json:"Sensitive,omitempty"`
}

func (x *CreateUserDefinePersonRequest) Reset() {
	*x = CreateUserDefinePersonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserDefinePersonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserDefinePersonRequest) ProtoMessage() {}

func (x *CreateUserDefinePersonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserDefinePersonRequest.ProtoReflect.Descriptor instead.
func (*CreateUserDefinePersonRequest) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{9}
}

func (x *CreateUserDefinePersonRequest) GetMediaIdSet() []string {
	if x != nil {
		return x.MediaIdSet
	}
	return nil
}

func (x *CreateUserDefinePersonRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateUserDefinePersonRequest) GetBasicInfo() string {
	if x != nil {
		return x.BasicInfo
	}
	return ""
}

func (x *CreateUserDefinePersonRequest) GetTag1_1() string {
	if x != nil {
		return x.Tag1_1
	}
	return ""
}

func (x *CreateUserDefinePersonRequest) GetTag1_2() string {
	if x != nil {
		return x.Tag1_2
	}
	return ""
}

func (x *CreateUserDefinePersonRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *CreateUserDefinePersonRequest) GetUin() string {
	if x != nil {
		return x.Uin
	}
	return ""
}

func (x *CreateUserDefinePersonRequest) GetTIProjectID() uint32 {
	if x != nil {
		return x.TIProjectID
	}
	return 0
}

func (x *CreateUserDefinePersonRequest) GetTIBusinessID() uint32 {
	if x != nil {
		return x.TIBusinessID
	}
	return 0
}

func (x *CreateUserDefinePersonRequest) GetMediaURLSet() []string {
	if x != nil {
		return x.MediaURLSet
	}
	return nil
}

func (x *CreateUserDefinePersonRequest) GetGroupID() uint32 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *CreateUserDefinePersonRequest) GetSensitive() int32 {
	if x != nil {
		return x.Sensitive
	}
	return 0
}

type ImageCheckInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaId   string `protobuf:"bytes,1,opt,name=MediaId,proto3" json:"MediaId,omitempty"`
	CheckCode int32  `protobuf:"varint,2,opt,name=CheckCode,proto3" json:"CheckCode,omitempty"`
	CheckMsg  string `protobuf:"bytes,3,opt,name=CheckMsg,proto3" json:"CheckMsg,omitempty"`
	MediaURL  string `protobuf:"bytes,4,opt,name=MediaURL,proto3" json:"MediaURL,omitempty"`
}

func (x *ImageCheckInfo) Reset() {
	*x = ImageCheckInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageCheckInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageCheckInfo) ProtoMessage() {}

func (x *ImageCheckInfo) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageCheckInfo.ProtoReflect.Descriptor instead.
func (*ImageCheckInfo) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{10}
}

func (x *ImageCheckInfo) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *ImageCheckInfo) GetCheckCode() int32 {
	if x != nil {
		return x.CheckCode
	}
	return 0
}

func (x *ImageCheckInfo) GetCheckMsg() string {
	if x != nil {
		return x.CheckMsg
	}
	return ""
}

func (x *ImageCheckInfo) GetMediaURL() string {
	if x != nil {
		return x.MediaURL
	}
	return ""
}

type CreateUserDefinePersonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonID  string            `protobuf:"bytes,3,opt,name=PersonID,proto3" json:"PersonID,omitempty"`
	CheckInfo []*ImageCheckInfo `protobuf:"bytes,4,rep,name=CheckInfo,proto3" json:"CheckInfo,omitempty"`
}

func (x *CreateUserDefinePersonResponse) Reset() {
	*x = CreateUserDefinePersonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserDefinePersonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserDefinePersonResponse) ProtoMessage() {}

func (x *CreateUserDefinePersonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserDefinePersonResponse.ProtoReflect.Descriptor instead.
func (*CreateUserDefinePersonResponse) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{11}
}

func (x *CreateUserDefinePersonResponse) GetPersonID() string {
	if x != nil {
		return x.PersonID
	}
	return ""
}

func (x *CreateUserDefinePersonResponse) GetCheckInfo() []*ImageCheckInfo {
	if x != nil {
		return x.CheckInfo
	}
	return nil
}

// 删除自定义人物
type RemoveUserDefinePersonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonID string `protobuf:"bytes,1,opt,name=PersonID,proto3" json:"PersonID,omitempty"`
}

func (x *RemoveUserDefinePersonRequest) Reset() {
	*x = RemoveUserDefinePersonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUserDefinePersonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserDefinePersonRequest) ProtoMessage() {}

func (x *RemoveUserDefinePersonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserDefinePersonRequest.ProtoReflect.Descriptor instead.
func (*RemoveUserDefinePersonRequest) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{12}
}

func (x *RemoveUserDefinePersonRequest) GetPersonID() string {
	if x != nil {
		return x.PersonID
	}
	return ""
}

type RemoveUserDefinePersonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveUserDefinePersonResponse) Reset() {
	*x = RemoveUserDefinePersonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUserDefinePersonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserDefinePersonResponse) ProtoMessage() {}

func (x *RemoveUserDefinePersonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserDefinePersonResponse.ProtoReflect.Descriptor instead.
func (*RemoveUserDefinePersonResponse) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{13}
}

// 更新自定义人物的信息
type UpdateUserDefinePersonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonID    string   `protobuf:"bytes,1,opt,name=PersonID,proto3" json:"PersonID,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	BasicInfo   string   `protobuf:"bytes,3,opt,name=BasicInfo,proto3" json:"BasicInfo,omitempty"`
	Tag1_1      string   `protobuf:"bytes,4,opt,name=Tag1_1,json=Tag11,proto3" json:"Tag1_1,omitempty"`
	Tag1_2      string   `protobuf:"bytes,5,opt,name=Tag1_2,json=Tag12,proto3" json:"Tag1_2,omitempty"`
	MediaIdSet  []string `protobuf:"bytes,6,rep,name=MediaIdSet,proto3" json:"MediaIdSet,omitempty"`
	MediaURLSet []string `protobuf:"bytes,11,rep,name=MediaURLSet,proto3" json:"MediaURLSet,omitempty"`
	Sensitive   int32    `protobuf:"varint,12,opt,name=Sensitive,proto3" json:"Sensitive,omitempty"`
}

func (x *UpdateUserDefinePersonRequest) Reset() {
	*x = UpdateUserDefinePersonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserDefinePersonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserDefinePersonRequest) ProtoMessage() {}

func (x *UpdateUserDefinePersonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserDefinePersonRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserDefinePersonRequest) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateUserDefinePersonRequest) GetPersonID() string {
	if x != nil {
		return x.PersonID
	}
	return ""
}

func (x *UpdateUserDefinePersonRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateUserDefinePersonRequest) GetBasicInfo() string {
	if x != nil {
		return x.BasicInfo
	}
	return ""
}

func (x *UpdateUserDefinePersonRequest) GetTag1_1() string {
	if x != nil {
		return x.Tag1_1
	}
	return ""
}

func (x *UpdateUserDefinePersonRequest) GetTag1_2() string {
	if x != nil {
		return x.Tag1_2
	}
	return ""
}

func (x *UpdateUserDefinePersonRequest) GetMediaIdSet() []string {
	if x != nil {
		return x.MediaIdSet
	}
	return nil
}

func (x *UpdateUserDefinePersonRequest) GetMediaURLSet() []string {
	if x != nil {
		return x.MediaURLSet
	}
	return nil
}

func (x *UpdateUserDefinePersonRequest) GetSensitive() int32 {
	if x != nil {
		return x.Sensitive
	}
	return 0
}

type UpdateUserDefinePersonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonID  string            `protobuf:"bytes,3,opt,name=PersonID,proto3" json:"PersonID,omitempty"`
	CheckInfo []*ImageCheckInfo `protobuf:"bytes,4,rep,name=CheckInfo,proto3" json:"CheckInfo,omitempty"`
}

func (x *UpdateUserDefinePersonResponse) Reset() {
	*x = UpdateUserDefinePersonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserDefinePersonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserDefinePersonResponse) ProtoMessage() {}

func (x *UpdateUserDefinePersonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserDefinePersonResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserDefinePersonResponse) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateUserDefinePersonResponse) GetPersonID() string {
	if x != nil {
		return x.PersonID
	}
	return ""
}

func (x *UpdateUserDefinePersonResponse) GetCheckInfo() []*ImageCheckInfo {
	if x != nil {
		return x.CheckInfo
	}
	return nil
}

// 查询自定义人物
type FilterBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Status    []int32  `protobuf:"varint,2,rep,packed,name=Status,proto3" json:"Status,omitempty"`
	Tag1_1    []string `protobuf:"bytes,3,rep,name=Tag1_1,json=Tag11,proto3" json:"Tag1_1,omitempty"`
	Tag1_2    []string `protobuf:"bytes,4,rep,name=Tag1_2,json=Tag12,proto3" json:"Tag1_2,omitempty"`
	Sensitive []int32  `protobuf:"varint,5,rep,packed,name=Sensitive,proto3" json:"Sensitive,omitempty"`
}

func (x *FilterBy) Reset() {
	*x = FilterBy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterBy) ProtoMessage() {}

func (x *FilterBy) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterBy.ProtoReflect.Descriptor instead.
func (*FilterBy) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{16}
}

func (x *FilterBy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FilterBy) GetStatus() []int32 {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *FilterBy) GetTag1_1() []string {
	if x != nil {
		return x.Tag1_1
	}
	return nil
}

func (x *FilterBy) GetTag1_2() []string {
	if x != nil {
		return x.Tag1_2
	}
	return nil
}

func (x *FilterBy) GetSensitive() []int32 {
	if x != nil {
		return x.Sensitive
	}
	return nil
}

type SortBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	By   string `protobuf:"bytes,1,opt,name=By,proto3" json:"By,omitempty"`
	Desc bool   `protobuf:"varint,2,opt,name=Desc,proto3" json:"Desc,omitempty"`
}

func (x *SortBy) Reset() {
	*x = SortBy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortBy) ProtoMessage() {}

func (x *SortBy) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortBy.ProtoReflect.Descriptor instead.
func (*SortBy) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{17}
}

func (x *SortBy) GetBy() string {
	if x != nil {
		return x.By
	}
	return ""
}

func (x *SortBy) GetDesc() bool {
	if x != nil {
		return x.Desc
	}
	return false
}

type DescribeUserDefinePersonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNumber int32     `protobuf:"varint,1,opt,name=PageNumber,proto3" json:"PageNumber,omitempty"`
	PageSize   int32     `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	FilterBy   *FilterBy `protobuf:"bytes,3,opt,name=FilterBy,proto3" json:"FilterBy,omitempty"`
	SortBy     *SortBy   `protobuf:"bytes,4,opt,name=SortBy,proto3" json:"SortBy,omitempty"`
	GroupID    *uint32   `protobuf:"varint,9,opt,name=GroupID,proto3,oneof" json:"GroupID,omitempty"`
}

func (x *DescribeUserDefinePersonRequest) Reset() {
	*x = DescribeUserDefinePersonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeUserDefinePersonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeUserDefinePersonRequest) ProtoMessage() {}

func (x *DescribeUserDefinePersonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeUserDefinePersonRequest.ProtoReflect.Descriptor instead.
func (*DescribeUserDefinePersonRequest) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{18}
}

func (x *DescribeUserDefinePersonRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *DescribeUserDefinePersonRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *DescribeUserDefinePersonRequest) GetFilterBy() *FilterBy {
	if x != nil {
		return x.FilterBy
	}
	return nil
}

func (x *DescribeUserDefinePersonRequest) GetSortBy() *SortBy {
	if x != nil {
		return x.SortBy
	}
	return nil
}

func (x *DescribeUserDefinePersonRequest) GetGroupID() uint32 {
	if x != nil && x.GroupID != nil {
		return *x.GroupID
	}
	return 0
}

type PersonUserDefined struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonID   string `protobuf:"bytes,1,opt,name=PersonID,proto3" json:"PersonID,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	MediaId    string `protobuf:"bytes,3,opt,name=MediaId,proto3" json:"MediaId,omitempty"`
	Url        string `protobuf:"bytes,4,opt,name=Url,proto3" json:"Url,omitempty"`
	Tag1_1     string `protobuf:"bytes,5,opt,name=Tag1_1,json=Tag11,proto3" json:"Tag1_1,omitempty"`
	Tag1_2     string `protobuf:"bytes,6,opt,name=Tag1_2,json=Tag12,proto3" json:"Tag1_2,omitempty"`
	BasicInfo  string `protobuf:"bytes,7,opt,name=BasicInfo,proto3" json:"BasicInfo,omitempty"`
	Status     int32  `protobuf:"varint,8,opt,name=Status,proto3" json:"Status,omitempty"`
	CreateTime string `protobuf:"bytes,9,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	MediaURL   string `protobuf:"bytes,10,opt,name=MediaURL,proto3" json:"MediaURL,omitempty"`
	GroupID    uint32 `protobuf:"varint,11,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	Sensitive  int32  `protobuf:"varint,12,opt,name=Sensitive,proto3" json:"Sensitive,omitempty"`
}

func (x *PersonUserDefined) Reset() {
	*x = PersonUserDefined{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersonUserDefined) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonUserDefined) ProtoMessage() {}

func (x *PersonUserDefined) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonUserDefined.ProtoReflect.Descriptor instead.
func (*PersonUserDefined) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{19}
}

func (x *PersonUserDefined) GetPersonID() string {
	if x != nil {
		return x.PersonID
	}
	return ""
}

func (x *PersonUserDefined) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PersonUserDefined) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *PersonUserDefined) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PersonUserDefined) GetTag1_1() string {
	if x != nil {
		return x.Tag1_1
	}
	return ""
}

func (x *PersonUserDefined) GetTag1_2() string {
	if x != nil {
		return x.Tag1_2
	}
	return ""
}

func (x *PersonUserDefined) GetBasicInfo() string {
	if x != nil {
		return x.BasicInfo
	}
	return ""
}

func (x *PersonUserDefined) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PersonUserDefined) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *PersonUserDefined) GetMediaURL() string {
	if x != nil {
		return x.MediaURL
	}
	return ""
}

func (x *PersonUserDefined) GetGroupID() uint32 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *PersonUserDefined) GetSensitive() int32 {
	if x != nil {
		return x.Sensitive
	}
	return 0
}

type DescribeUserDefinePersonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount  int32                `protobuf:"varint,2,opt,name=TotalCount,proto3" json:"TotalCount,omitempty"`
	RevertCount int32                `protobuf:"varint,3,opt,name=RevertCount,proto3" json:"RevertCount,omitempty"`
	PersonInfo  []*PersonUserDefined `protobuf:"bytes,4,rep,name=PersonInfo,proto3" json:"PersonInfo,omitempty"`
}

func (x *DescribeUserDefinePersonResponse) Reset() {
	*x = DescribeUserDefinePersonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeUserDefinePersonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeUserDefinePersonResponse) ProtoMessage() {}

func (x *DescribeUserDefinePersonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeUserDefinePersonResponse.ProtoReflect.Descriptor instead.
func (*DescribeUserDefinePersonResponse) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{20}
}

func (x *DescribeUserDefinePersonResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *DescribeUserDefinePersonResponse) GetRevertCount() int32 {
	if x != nil {
		return x.RevertCount
	}
	return 0
}

func (x *DescribeUserDefinePersonResponse) GetPersonInfo() []*PersonUserDefined {
	if x != nil {
		return x.PersonInfo
	}
	return nil
}

type DescribeUserDefinePersonDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonID []string `protobuf:"bytes,2,rep,name=PersonID,proto3" json:"PersonID,omitempty"`
}

func (x *DescribeUserDefinePersonDetailRequest) Reset() {
	*x = DescribeUserDefinePersonDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeUserDefinePersonDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeUserDefinePersonDetailRequest) ProtoMessage() {}

func (x *DescribeUserDefinePersonDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeUserDefinePersonDetailRequest.ProtoReflect.Descriptor instead.
func (*DescribeUserDefinePersonDetailRequest) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{21}
}

func (x *DescribeUserDefinePersonDetailRequest) GetPersonID() []string {
	if x != nil {
		return x.PersonID
	}
	return nil
}

type DescribeUserDefinePersonDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Persons []*PersonUserDefinedDetail `protobuf:"bytes,3,rep,name=Persons,proto3" json:"Persons,omitempty"`
}

func (x *DescribeUserDefinePersonDetailResponse) Reset() {
	*x = DescribeUserDefinePersonDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeUserDefinePersonDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeUserDefinePersonDetailResponse) ProtoMessage() {}

func (x *DescribeUserDefinePersonDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeUserDefinePersonDetailResponse.ProtoReflect.Descriptor instead.
func (*DescribeUserDefinePersonDetailResponse) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{22}
}

func (x *DescribeUserDefinePersonDetailResponse) GetPersons() []*PersonUserDefinedDetail {
	if x != nil {
		return x.Persons
	}
	return nil
}

type Media struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaId  string `protobuf:"bytes,1,opt,name=MediaId,proto3" json:"MediaId,omitempty"`
	MediaURL string `protobuf:"bytes,2,opt,name=MediaURL,proto3" json:"MediaURL,omitempty"`
}

func (x *Media) Reset() {
	*x = Media{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Media) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Media) ProtoMessage() {}

func (x *Media) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Media.ProtoReflect.Descriptor instead.
func (*Media) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{23}
}

func (x *Media) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *Media) GetMediaURL() string {
	if x != nil {
		return x.MediaURL
	}
	return ""
}

type PersonUserDefinedDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonID   string   `protobuf:"bytes,1,opt,name=PersonID,proto3" json:"PersonID,omitempty"`
	Name       string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Medias     []*Media `protobuf:"bytes,3,rep,name=Medias,proto3" json:"Medias,omitempty"`
	Tag1_1     string   `protobuf:"bytes,4,opt,name=Tag1_1,json=Tag11,proto3" json:"Tag1_1,omitempty"`
	Tag1_2     string   `protobuf:"bytes,5,opt,name=Tag1_2,json=Tag12,proto3" json:"Tag1_2,omitempty"`
	BasicInfo  string   `protobuf:"bytes,6,opt,name=BasicInfo,proto3" json:"BasicInfo,omitempty"`
	Status     int32    `protobuf:"varint,7,opt,name=Status,proto3" json:"Status,omitempty"`
	CreateTime string   `protobuf:"bytes,8,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	GroupID    uint32   `protobuf:"varint,9,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	Sensitive  int32    `protobuf:"varint,10,opt,name=Sensitive,proto3" json:"Sensitive,omitempty"`
}

func (x *PersonUserDefinedDetail) Reset() {
	*x = PersonUserDefinedDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersonUserDefinedDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonUserDefinedDetail) ProtoMessage() {}

func (x *PersonUserDefinedDetail) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonUserDefinedDetail.ProtoReflect.Descriptor instead.
func (*PersonUserDefinedDetail) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{24}
}

func (x *PersonUserDefinedDetail) GetPersonID() string {
	if x != nil {
		return x.PersonID
	}
	return ""
}

func (x *PersonUserDefinedDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PersonUserDefinedDetail) GetMedias() []*Media {
	if x != nil {
		return x.Medias
	}
	return nil
}

func (x *PersonUserDefinedDetail) GetTag1_1() string {
	if x != nil {
		return x.Tag1_1
	}
	return ""
}

func (x *PersonUserDefinedDetail) GetTag1_2() string {
	if x != nil {
		return x.Tag1_2
	}
	return ""
}

func (x *PersonUserDefinedDetail) GetBasicInfo() string {
	if x != nil {
		return x.BasicInfo
	}
	return ""
}

func (x *PersonUserDefinedDetail) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PersonUserDefinedDetail) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *PersonUserDefinedDetail) GetGroupID() uint32 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *PersonUserDefinedDetail) GetSensitive() int32 {
	if x != nil {
		return x.Sensitive
	}
	return 0
}

type CreatePersonCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag1_1 string `protobuf:"bytes,2,opt,name=Tag1_1,json=Tag11,proto3" json:"Tag1_1,omitempty"`
	Tag1_2 string `protobuf:"bytes,3,opt,name=Tag1_2,json=Tag12,proto3" json:"Tag1_2,omitempty"`
}

func (x *CreatePersonCategoryRequest) Reset() {
	*x = CreatePersonCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePersonCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePersonCategoryRequest) ProtoMessage() {}

func (x *CreatePersonCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePersonCategoryRequest.ProtoReflect.Descriptor instead.
func (*CreatePersonCategoryRequest) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{25}
}

func (x *CreatePersonCategoryRequest) GetTag1_1() string {
	if x != nil {
		return x.Tag1_1
	}
	return ""
}

func (x *CreatePersonCategoryRequest) GetTag1_2() string {
	if x != nil {
		return x.Tag1_2
	}
	return ""
}

type CreatePersonCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreatePersonCategoryResponse) Reset() {
	*x = CreatePersonCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePersonCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePersonCategoryResponse) ProtoMessage() {}

func (x *CreatePersonCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePersonCategoryResponse.ProtoReflect.Descriptor instead.
func (*CreatePersonCategoryResponse) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{26}
}

type RemovePersonCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag1_1 string `protobuf:"bytes,2,opt,name=Tag1_1,json=Tag11,proto3" json:"Tag1_1,omitempty"`
	Tag1_2 string `protobuf:"bytes,3,opt,name=Tag1_2,json=Tag12,proto3" json:"Tag1_2,omitempty"`
}

func (x *RemovePersonCategoryRequest) Reset() {
	*x = RemovePersonCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePersonCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePersonCategoryRequest) ProtoMessage() {}

func (x *RemovePersonCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePersonCategoryRequest.ProtoReflect.Descriptor instead.
func (*RemovePersonCategoryRequest) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{27}
}

func (x *RemovePersonCategoryRequest) GetTag1_1() string {
	if x != nil {
		return x.Tag1_1
	}
	return ""
}

func (x *RemovePersonCategoryRequest) GetTag1_2() string {
	if x != nil {
		return x.Tag1_2
	}
	return ""
}

type RemovePersonCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemovePersonCategoryResponse) Reset() {
	*x = RemovePersonCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePersonCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePersonCategoryResponse) ProtoMessage() {}

func (x *RemovePersonCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePersonCategoryResponse.ProtoReflect.Descriptor instead.
func (*RemovePersonCategoryResponse) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{28}
}

type DescribePersonCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DescribePersonCategoryRequest) Reset() {
	*x = DescribePersonCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribePersonCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribePersonCategoryRequest) ProtoMessage() {}

func (x *DescribePersonCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribePersonCategoryRequest.ProtoReflect.Descriptor instead.
func (*DescribePersonCategoryRequest) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{29}
}

type DescribePersonCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Categories []*PersonCategory `protobuf:"bytes,3,rep,name=Categories,proto3" json:"Categories,omitempty"`
}

func (x *DescribePersonCategoryResponse) Reset() {
	*x = DescribePersonCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribePersonCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribePersonCategoryResponse) ProtoMessage() {}

func (x *DescribePersonCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribePersonCategoryResponse.ProtoReflect.Descriptor instead.
func (*DescribePersonCategoryResponse) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{30}
}

func (x *DescribePersonCategoryResponse) GetCategories() []*PersonCategory {
	if x != nil {
		return x.Categories
	}
	return nil
}

type PersonCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag1_1 string `protobuf:"bytes,1,opt,name=Tag1_1,json=Tag11,proto3" json:"Tag1_1,omitempty"`
	Tag1_2 string `protobuf:"bytes,2,opt,name=Tag1_2,json=Tag12,proto3" json:"Tag1_2,omitempty"`
}

func (x *PersonCategory) Reset() {
	*x = PersonCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersonCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonCategory) ProtoMessage() {}

func (x *PersonCategory) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonCategory.ProtoReflect.Descriptor instead.
func (*PersonCategory) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{31}
}

func (x *PersonCategory) GetTag1_1() string {
	if x != nil {
		return x.Tag1_1
	}
	return ""
}

func (x *PersonCategory) GetTag1_2() string {
	if x != nil {
		return x.Tag1_2
	}
	return ""
}

// 根据特征Id查询数据库中自定义人物
// 1. 从hades查public_face_user_group_{$projectid}}_{$business_id}获取feature_id。
// 2. 输入feature_id查询自定义人物信息。
type DescribeUserDefinePersonWithFeatureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeatureId []string `protobuf:"bytes,2,rep,name=FeatureId,proto3" json:"FeatureId,omitempty"`
}

func (x *DescribeUserDefinePersonWithFeatureRequest) Reset() {
	*x = DescribeUserDefinePersonWithFeatureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeUserDefinePersonWithFeatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeUserDefinePersonWithFeatureRequest) ProtoMessage() {}

func (x *DescribeUserDefinePersonWithFeatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeUserDefinePersonWithFeatureRequest.ProtoReflect.Descriptor instead.
func (*DescribeUserDefinePersonWithFeatureRequest) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{32}
}

func (x *DescribeUserDefinePersonWithFeatureRequest) GetFeatureId() []string {
	if x != nil {
		return x.FeatureId
	}
	return nil
}

type DescribeUserDefinePersonWithFeatureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Persons []*PersonUserDefinedDetail `protobuf:"bytes,3,rep,name=Persons,proto3" json:"Persons,omitempty"`
}

func (x *DescribeUserDefinePersonWithFeatureResponse) Reset() {
	*x = DescribeUserDefinePersonWithFeatureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeUserDefinePersonWithFeatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeUserDefinePersonWithFeatureResponse) ProtoMessage() {}

func (x *DescribeUserDefinePersonWithFeatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeUserDefinePersonWithFeatureResponse.ProtoReflect.Descriptor instead.
func (*DescribeUserDefinePersonWithFeatureResponse) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{33}
}

func (x *DescribeUserDefinePersonWithFeatureResponse) GetPersons() []*PersonUserDefinedDetail {
	if x != nil {
		return x.Persons
	}
	return nil
}

// 翻库动作
type PersonRevertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonID    string   `protobuf:"bytes,1,opt,name=PersonID,proto3" json:"PersonID,omitempty"`
	TaskIdSet   []string `protobuf:"bytes,2,rep,name=TaskIdSet,proto3" json:"TaskIdSet,omitempty"`
	RequestId   string   `protobuf:"bytes,3,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	CallbackId  string   `protobuf:"bytes,7,opt,name=CallbackId,proto3" json:"CallbackId,omitempty"`
	CallbackUrl string   `protobuf:"bytes,8,opt,name=CallbackUrl,proto3" json:"CallbackUrl,omitempty"`
}

func (x *PersonRevertRequest) Reset() {
	*x = PersonRevertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersonRevertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonRevertRequest) ProtoMessage() {}

func (x *PersonRevertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonRevertRequest.ProtoReflect.Descriptor instead.
func (*PersonRevertRequest) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{34}
}

func (x *PersonRevertRequest) GetPersonID() string {
	if x != nil {
		return x.PersonID
	}
	return ""
}

func (x *PersonRevertRequest) GetTaskIdSet() []string {
	if x != nil {
		return x.TaskIdSet
	}
	return nil
}

func (x *PersonRevertRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *PersonRevertRequest) GetCallbackId() string {
	if x != nil {
		return x.CallbackId
	}
	return ""
}

func (x *PersonRevertRequest) GetCallbackUrl() string {
	if x != nil {
		return x.CallbackUrl
	}
	return ""
}

type RevertTaskCheckInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId    string `protobuf:"bytes,1,opt,name=TaskId,proto3" json:"TaskId,omitempty"`
	CheckCode int32  `protobuf:"varint,2,opt,name=CheckCode,proto3" json:"CheckCode,omitempty"`
	CheckMsg  string `protobuf:"bytes,3,opt,name=CheckMsg,proto3" json:"CheckMsg,omitempty"`
	MediaId   string `protobuf:"bytes,4,opt,name=MediaId,proto3" json:"MediaId,omitempty"`
}

func (x *RevertTaskCheckInfo) Reset() {
	*x = RevertTaskCheckInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevertTaskCheckInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevertTaskCheckInfo) ProtoMessage() {}

func (x *RevertTaskCheckInfo) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevertTaskCheckInfo.ProtoReflect.Descriptor instead.
func (*RevertTaskCheckInfo) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{35}
}

func (x *RevertTaskCheckInfo) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *RevertTaskCheckInfo) GetCheckCode() int32 {
	if x != nil {
		return x.CheckCode
	}
	return 0
}

func (x *RevertTaskCheckInfo) GetCheckMsg() string {
	if x != nil {
		return x.CheckMsg
	}
	return ""
}

func (x *RevertTaskCheckInfo) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

type PersonRevertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckInfo []*RevertTaskCheckInfo `protobuf:"bytes,3,rep,name=CheckInfo,proto3" json:"CheckInfo,omitempty"`
}

func (x *PersonRevertResponse) Reset() {
	*x = PersonRevertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersonRevertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonRevertResponse) ProtoMessage() {}

func (x *PersonRevertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonRevertResponse.ProtoReflect.Descriptor instead.
func (*PersonRevertResponse) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{36}
}

func (x *PersonRevertResponse) GetCheckInfo() []*RevertTaskCheckInfo {
	if x != nil {
		return x.CheckInfo
	}
	return nil
}

// 查询翻库的task
type DescribeRevertTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonID          string `protobuf:"bytes,1,opt,name=PersonID,proto3" json:"PersonID,omitempty"`
	IsNeedKnownPerson bool   `protobuf:"varint,6,opt,name=isNeedKnownPerson,proto3" json:"isNeedKnownPerson,omitempty"`
}

func (x *DescribeRevertTasksRequest) Reset() {
	*x = DescribeRevertTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeRevertTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeRevertTasksRequest) ProtoMessage() {}

func (x *DescribeRevertTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeRevertTasksRequest.ProtoReflect.Descriptor instead.
func (*DescribeRevertTasksRequest) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{37}
}

func (x *DescribeRevertTasksRequest) GetPersonID() string {
	if x != nil {
		return x.PersonID
	}
	return ""
}

func (x *DescribeRevertTasksRequest) GetIsNeedKnownPerson() bool {
	if x != nil {
		return x.IsNeedKnownPerson
	}
	return false
}

type RevertTaskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId   string `protobuf:"bytes,1,opt,name=TaskId,proto3" json:"TaskId,omitempty"`
	TaskName string `protobuf:"bytes,2,opt,name=TaskName,proto3" json:"TaskName,omitempty"`
	AppID    string `protobuf:"bytes,3,opt,name=AppID,proto3" json:"AppID,omitempty"`
	MediaId  string `protobuf:"bytes,4,opt,name=MediaId,proto3" json:"MediaId,omitempty"`
	MediaURL string `protobuf:"bytes,5,opt,name=MediaURL,proto3" json:"MediaURL,omitempty"`
}

func (x *RevertTaskInfo) Reset() {
	*x = RevertTaskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevertTaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevertTaskInfo) ProtoMessage() {}

func (x *RevertTaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevertTaskInfo.ProtoReflect.Descriptor instead.
func (*RevertTaskInfo) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{38}
}

func (x *RevertTaskInfo) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *RevertTaskInfo) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *RevertTaskInfo) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *RevertTaskInfo) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *RevertTaskInfo) GetMediaURL() string {
	if x != nil {
		return x.MediaURL
	}
	return ""
}

type DescribeRevertTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskInfo           []*RevertTaskInfo        `protobuf:"bytes,3,rep,name=TaskInfo,proto3" json:"TaskInfo,omitempty"`
	TaskCount          int32                    `protobuf:"varint,4,opt,name=TaskCount,proto3" json:"TaskCount,omitempty"`
	ExplicitPersonInfo *PersonUserDefinedDetail `protobuf:"bytes,5,opt,name=ExplicitPersonInfo,proto3" json:"ExplicitPersonInfo,omitempty"`
	UnknownPersonID    string                   `protobuf:"bytes,6,opt,name=UnknownPersonID,proto3" json:"UnknownPersonID,omitempty"`
	MediaSet           []*Media                 `protobuf:"bytes,7,rep,name=MediaSet,proto3" json:"MediaSet,omitempty"`
	RevertPersonID     string                   `protobuf:"bytes,8,opt,name=RevertPersonID,proto3" json:"RevertPersonID,omitempty"`
}

func (x *DescribeRevertTasksResponse) Reset() {
	*x = DescribeRevertTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeRevertTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeRevertTasksResponse) ProtoMessage() {}

func (x *DescribeRevertTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeRevertTasksResponse.ProtoReflect.Descriptor instead.
func (*DescribeRevertTasksResponse) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{39}
}

func (x *DescribeRevertTasksResponse) GetTaskInfo() []*RevertTaskInfo {
	if x != nil {
		return x.TaskInfo
	}
	return nil
}

func (x *DescribeRevertTasksResponse) GetTaskCount() int32 {
	if x != nil {
		return x.TaskCount
	}
	return 0
}

func (x *DescribeRevertTasksResponse) GetExplicitPersonInfo() *PersonUserDefinedDetail {
	if x != nil {
		return x.ExplicitPersonInfo
	}
	return nil
}

func (x *DescribeRevertTasksResponse) GetUnknownPersonID() string {
	if x != nil {
		return x.UnknownPersonID
	}
	return ""
}

func (x *DescribeRevertTasksResponse) GetMediaSet() []*Media {
	if x != nil {
		return x.MediaSet
	}
	return nil
}

func (x *DescribeRevertTasksResponse) GetRevertPersonID() string {
	if x != nil {
		return x.RevertPersonID
	}
	return ""
}

// 回调的三元组信息，兼容2.7的协议
type RevertCallBackInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallbackId         string                   `protobuf:"bytes,1,opt,name=CallbackId,proto3" json:"CallbackId,omitempty"`
	UnknownPersonID    string                   `protobuf:"bytes,2,opt,name=UnknownPersonID,proto3" json:"UnknownPersonID,omitempty"`
	ExplicitPersonInfo *PersonUserDefinedDetail `protobuf:"bytes,3,opt,name=ExplicitPersonInfo,proto3" json:"ExplicitPersonInfo,omitempty"`
	MediaSet           []*Media                 `protobuf:"bytes,4,rep,name=MediaSet,proto3" json:"MediaSet,omitempty"`
	MediaCount         int32                    `protobuf:"varint,5,opt,name=MediaCount,proto3" json:"MediaCount,omitempty"`
}

func (x *RevertCallBackInfo) Reset() {
	*x = RevertCallBackInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_user_define_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevertCallBackInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevertCallBackInfo) ProtoMessage() {}

func (x *RevertCallBackInfo) ProtoReflect() protoreflect.Message {
	mi := &file_person_user_define_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevertCallBackInfo.ProtoReflect.Descriptor instead.
func (*RevertCallBackInfo) Descriptor() ([]byte, []int) {
	return file_person_user_define_proto_rawDescGZIP(), []int{40}
}

func (x *RevertCallBackInfo) GetCallbackId() string {
	if x != nil {
		return x.CallbackId
	}
	return ""
}

func (x *RevertCallBackInfo) GetUnknownPersonID() string {
	if x != nil {
		return x.UnknownPersonID
	}
	return ""
}

func (x *RevertCallBackInfo) GetExplicitPersonInfo() *PersonUserDefinedDetail {
	if x != nil {
		return x.ExplicitPersonInfo
	}
	return nil
}

func (x *RevertCallBackInfo) GetMediaSet() []*Media {
	if x != nil {
		return x.MediaSet
	}
	return nil
}

func (x *RevertCallBackInfo) GetMediaCount() int32 {
	if x != nil {
		return x.MediaCount
	}
	return 0
}

var File_person_user_define_proto protoreflect.FileDescriptor

var file_person_user_define_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65,
	0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5e, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x39, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44,
	0x22, 0x5d, 0x0a, 0x1e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3b, 0x0a, 0x06, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x2e, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x52, 0x06, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x22,
	0xc5, 0x01, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd7, 0x01, 0x0a, 0x1f, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x78, 0x69, 0x73, 0x74, 0x46, 0x6c,
	0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x45, 0x78, 0x69, 0x73, 0x74, 0x46,
	0x6c, 0x61, 0x67, 0x12, 0x5c, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x12, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x38, 0x0a, 0x1c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x22, 0x1f, 0x0a, 0x1d, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc8, 0x01, 0x0a,
	0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x21, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x48, 0x02, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x1f, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xef, 0x02, 0x0a, 0x1d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x49, 0x64, 0x53, 0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x53, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06,
	0x54, 0x61, 0x67, 0x31, 0x5f, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x61,
	0x67, 0x31, 0x31, 0x12, 0x15, 0x0a, 0x06, 0x54, 0x61, 0x67, 0x31, 0x5f, 0x32, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x61, 0x67, 0x31, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x49,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x54, 0x49, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c,
	0x54, 0x49, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x54, 0x49, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x52, 0x4c, 0x53, 0x65, 0x74, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x52, 0x4c, 0x53,
	0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x0e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x73,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x73,
	0x67, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x52, 0x4c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x52, 0x4c, 0x22, 0x87, 0x01,
	0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x49, 0x0a, 0x09,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3b, 0x0a, 0x1d, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x49, 0x44, 0x22, 0x20, 0x0a, 0x1e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xfb, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x54, 0x61, 0x67, 0x31, 0x5f, 0x31,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x61, 0x67, 0x31, 0x31, 0x12, 0x15, 0x0a,
	0x06, 0x54, 0x61, 0x67, 0x31, 0x5f, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54,
	0x61, 0x67, 0x31, 0x32, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x53,
	0x65, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49,
	0x64, 0x53, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x52, 0x4c,
	0x53, 0x65, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x55, 0x52, 0x4c, 0x53, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x53, 0x65, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x76, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x49, 0x0a, 0x09, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x82,
	0x01, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x54, 0x61, 0x67, 0x31, 0x5f,
	0x31, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x54, 0x61, 0x67, 0x31, 0x31, 0x12, 0x15,
	0x0a, 0x06, 0x54, 0x61, 0x67, 0x31, 0x5f, 0x32, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x54, 0x61, 0x67, 0x31, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x22, 0x2c, 0x0a, 0x06, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x42, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x42, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x44, 0x65, 0x73,
	0x63, 0x22, 0x88, 0x02, 0x0a, 0x1f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x41, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x42, 0x79, 0x12, 0x3b, 0x0a, 0x06, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x52, 0x06, 0x53, 0x6f, 0x72, 0x74, 0x42,
	0x79, 0x12, 0x1d, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x00, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x22, 0xc7, 0x02, 0x0a,
	0x11, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x72, 0x6c, 0x12, 0x15,
	0x0a, 0x06, 0x54, 0x61, 0x67, 0x31, 0x5f, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x54, 0x61, 0x67, 0x31, 0x31, 0x12, 0x15, 0x0a, 0x06, 0x54, 0x61, 0x67, 0x31, 0x5f, 0x32, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x61, 0x67, 0x31, 0x32, 0x12, 0x1c, 0x0a, 0x09,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x52, 0x4c, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x52, 0x4c, 0x12, 0x18,
	0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x53, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x20, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x52,
	0x65, 0x76, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4e, 0x0a,
	0x0a, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x52, 0x0a, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x43, 0x0a,
	0x25, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x49, 0x44, 0x22, 0x78, 0x0a, 0x26, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x07,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x07, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x22, 0x3d, 0x0a, 0x05,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x52, 0x4c, 0x22, 0xc1, 0x02, 0x0a, 0x17,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x06, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x54, 0x61, 0x67, 0x31, 0x5f, 0x31, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x61, 0x67, 0x31, 0x31, 0x12, 0x15, 0x0a, 0x06, 0x54, 0x61,
	0x67, 0x31, 0x5f, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x61, 0x67, 0x31,
	0x32, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x22,
	0x4b, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x54, 0x61, 0x67, 0x31, 0x5f, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x54, 0x61, 0x67, 0x31, 0x31, 0x12, 0x15, 0x0a, 0x06, 0x54, 0x61, 0x67, 0x31, 0x5f, 0x32, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x61, 0x67, 0x31, 0x32, 0x22, 0x1e, 0x0a, 0x1c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x0a, 0x1b,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x54,
	0x61, 0x67, 0x31, 0x5f, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x61, 0x67,
	0x31, 0x31, 0x12, 0x15, 0x0a, 0x06, 0x54, 0x61, 0x67, 0x31, 0x5f, 0x32, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x54, 0x61, 0x67, 0x31, 0x32, 0x22, 0x1e, 0x0a, 0x1c, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6d, 0x0a, 0x1e, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0a,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0a, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x3e, 0x0a, 0x0e, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x54,
	0x61, 0x67, 0x31, 0x5f, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x61, 0x67,
	0x31, 0x31, 0x12, 0x15, 0x0a, 0x06, 0x54, 0x61, 0x67, 0x31, 0x5f, 0x32, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x54, 0x61, 0x67, 0x31, 0x32, 0x22, 0x4a, 0x0a, 0x2a, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x49, 0x64, 0x22, 0x7d, 0x0a, 0x2b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x57, 0x69, 0x74, 0x68, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x07, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x13, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52,
	0x65, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x53, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x54, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x53, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x55, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x22, 0x81, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x76, 0x65, 0x72,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16,
	0x0a, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x73, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x73, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x14, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4e, 0x0a, 0x09, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x2e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x66, 0x0a, 0x1a, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x76, 0x65, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11,
	0x69, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x4b,
	0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x22, 0x90, 0x01, 0x0a, 0x0e, 0x52,
	0x65, 0x76, 0x65, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x52, 0x4c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x52, 0x4c, 0x22, 0xfc, 0x02,
	0x0a, 0x1b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a,
	0x08, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x52, 0x65,
	0x76, 0x65, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x54, 0x61,
	0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x64, 0x0a, 0x12, 0x45, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x12, 0x45, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x3e, 0x0a, 0x08, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x65, 0x74,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x08, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x53, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x52, 0x65,
	0x76, 0x65, 0x72, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xa4, 0x02, 0x0a,
	0x12, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x64, 0x0a,
	0x12, 0x45, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65,
	0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x12, 0x45, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x08, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x65, 0x74, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x08, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x53, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x32, 0xc9, 0x11, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x8e, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x39, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x94, 0x01, 0x0a, 0x17, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3b, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x8e, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x39, 0x2e, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73,
	0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x8e, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x39, 0x2e, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75,
	0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x91, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x3a, 0x2e,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65,
	0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x91, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x12, 0x3a, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x91, 0x01, 0x0a, 0x16, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x3a, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3b, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x97,
	0x01, 0x0a, 0x18, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x3c, 0x2e, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75,
	0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65,
	0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa9, 0x01, 0x0a, 0x1e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x42, 0x2e, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75,
	0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x43, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0xb8, 0x01, 0x0a, 0x23, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x57, 0x69, 0x74, 0x68, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x47, 0x2e, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x8b, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x38, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x39, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8b, 0x01,
	0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x38, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x39, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x91, 0x01, 0x0a, 0x16,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x3a, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x73, 0x0a, 0x0c, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12,
	0x30, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x31, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x37, 0x2e, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x76, 0x65,
	0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x60, 0x5a, 0x5e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54, 0x65,
	0x6e, 0x63, 0x65, 0x6e, 0x74, 0x2d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2d, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x2d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2d, 0x73, 0x64, 0x6b, 0x2d,
	0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2d, 0x73, 0x70, 0x65, 0x63,
	0x2f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_person_user_define_proto_rawDescOnce sync.Once
	file_person_user_define_proto_rawDescData = file_person_user_define_proto_rawDesc
)

func file_person_user_define_proto_rawDescGZIP() []byte {
	file_person_user_define_proto_rawDescOnce.Do(func() {
		file_person_user_define_proto_rawDescData = protoimpl.X.CompressGZIP(file_person_user_define_proto_rawDescData)
	})
	return file_person_user_define_proto_rawDescData
}

var file_person_user_define_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_person_user_define_proto_goTypes = []interface{}{
	(*CreateUserDefineGroupRequest)(nil),           // 0: trpc.media.personuserdefine.CreateUserDefineGroupRequest
	(*CreateUserDefineGroupResponse)(nil),          // 1: trpc.media.personuserdefine.CreateUserDefineGroupResponse
	(*DescribeUserDefineGroupRequest)(nil),         // 2: trpc.media.personuserdefine.DescribeUserDefineGroupRequest
	(*UserDefineGroup)(nil),                        // 3: trpc.media.personuserdefine.UserDefineGroup
	(*DescribeUserDefineGroupResponse)(nil),        // 4: trpc.media.personuserdefine.DescribeUserDefineGroupResponse
	(*RemoveUserDefineGroupRequest)(nil),           // 5: trpc.media.personuserdefine.RemoveUserDefineGroupRequest
	(*RemoveUserDefineGroupResponse)(nil),          // 6: trpc.media.personuserdefine.RemoveUserDefineGroupResponse
	(*UpdateUserDefineGroupRequest)(nil),           // 7: trpc.media.personuserdefine.UpdateUserDefineGroupRequest
	(*UpdateUserDefineGroupResponse)(nil),          // 8: trpc.media.personuserdefine.UpdateUserDefineGroupResponse
	(*CreateUserDefinePersonRequest)(nil),          // 9: trpc.media.personuserdefine.CreateUserDefinePersonRequest
	(*ImageCheckInfo)(nil),                         // 10: trpc.media.personuserdefine.ImageCheckInfo
	(*CreateUserDefinePersonResponse)(nil),         // 11: trpc.media.personuserdefine.CreateUserDefinePersonResponse
	(*RemoveUserDefinePersonRequest)(nil),          // 12: trpc.media.personuserdefine.RemoveUserDefinePersonRequest
	(*RemoveUserDefinePersonResponse)(nil),         // 13: trpc.media.personuserdefine.RemoveUserDefinePersonResponse
	(*UpdateUserDefinePersonRequest)(nil),          // 14: trpc.media.personuserdefine.UpdateUserDefinePersonRequest
	(*UpdateUserDefinePersonResponse)(nil),         // 15: trpc.media.personuserdefine.UpdateUserDefinePersonResponse
	(*FilterBy)(nil),                               // 16: trpc.media.personuserdefine.FilterBy
	(*SortBy)(nil),                                 // 17: trpc.media.personuserdefine.SortBy
	(*DescribeUserDefinePersonRequest)(nil),        // 18: trpc.media.personuserdefine.DescribeUserDefinePersonRequest
	(*PersonUserDefined)(nil),                      // 19: trpc.media.personuserdefine.PersonUserDefined
	(*DescribeUserDefinePersonResponse)(nil),       // 20: trpc.media.personuserdefine.DescribeUserDefinePersonResponse
	(*DescribeUserDefinePersonDetailRequest)(nil),  // 21: trpc.media.personuserdefine.DescribeUserDefinePersonDetailRequest
	(*DescribeUserDefinePersonDetailResponse)(nil), // 22: trpc.media.personuserdefine.DescribeUserDefinePersonDetailResponse
	(*Media)(nil),                                       // 23: trpc.media.personuserdefine.Media
	(*PersonUserDefinedDetail)(nil),                     // 24: trpc.media.personuserdefine.PersonUserDefinedDetail
	(*CreatePersonCategoryRequest)(nil),                 // 25: trpc.media.personuserdefine.CreatePersonCategoryRequest
	(*CreatePersonCategoryResponse)(nil),                // 26: trpc.media.personuserdefine.CreatePersonCategoryResponse
	(*RemovePersonCategoryRequest)(nil),                 // 27: trpc.media.personuserdefine.RemovePersonCategoryRequest
	(*RemovePersonCategoryResponse)(nil),                // 28: trpc.media.personuserdefine.RemovePersonCategoryResponse
	(*DescribePersonCategoryRequest)(nil),               // 29: trpc.media.personuserdefine.DescribePersonCategoryRequest
	(*DescribePersonCategoryResponse)(nil),              // 30: trpc.media.personuserdefine.DescribePersonCategoryResponse
	(*PersonCategory)(nil),                              // 31: trpc.media.personuserdefine.PersonCategory
	(*DescribeUserDefinePersonWithFeatureRequest)(nil),  // 32: trpc.media.personuserdefine.DescribeUserDefinePersonWithFeatureRequest
	(*DescribeUserDefinePersonWithFeatureResponse)(nil), // 33: trpc.media.personuserdefine.DescribeUserDefinePersonWithFeatureResponse
	(*PersonRevertRequest)(nil),                         // 34: trpc.media.personuserdefine.PersonRevertRequest
	(*RevertTaskCheckInfo)(nil),                         // 35: trpc.media.personuserdefine.RevertTaskCheckInfo
	(*PersonRevertResponse)(nil),                        // 36: trpc.media.personuserdefine.PersonRevertResponse
	(*DescribeRevertTasksRequest)(nil),                  // 37: trpc.media.personuserdefine.DescribeRevertTasksRequest
	(*RevertTaskInfo)(nil),                              // 38: trpc.media.personuserdefine.RevertTaskInfo
	(*DescribeRevertTasksResponse)(nil),                 // 39: trpc.media.personuserdefine.DescribeRevertTasksResponse
	(*RevertCallBackInfo)(nil),                          // 40: trpc.media.personuserdefine.RevertCallBackInfo
}
var file_person_user_define_proto_depIdxs = []int32{
	17, // 0: trpc.media.personuserdefine.DescribeUserDefineGroupRequest.SortBy:type_name -> trpc.media.personuserdefine.SortBy
	3,  // 1: trpc.media.personuserdefine.DescribeUserDefineGroupResponse.UserDefineGroupSet:type_name -> trpc.media.personuserdefine.UserDefineGroup
	10, // 2: trpc.media.personuserdefine.CreateUserDefinePersonResponse.CheckInfo:type_name -> trpc.media.personuserdefine.ImageCheckInfo
	10, // 3: trpc.media.personuserdefine.UpdateUserDefinePersonResponse.CheckInfo:type_name -> trpc.media.personuserdefine.ImageCheckInfo
	16, // 4: trpc.media.personuserdefine.DescribeUserDefinePersonRequest.FilterBy:type_name -> trpc.media.personuserdefine.FilterBy
	17, // 5: trpc.media.personuserdefine.DescribeUserDefinePersonRequest.SortBy:type_name -> trpc.media.personuserdefine.SortBy
	19, // 6: trpc.media.personuserdefine.DescribeUserDefinePersonResponse.PersonInfo:type_name -> trpc.media.personuserdefine.PersonUserDefined
	24, // 7: trpc.media.personuserdefine.DescribeUserDefinePersonDetailResponse.Persons:type_name -> trpc.media.personuserdefine.PersonUserDefinedDetail
	23, // 8: trpc.media.personuserdefine.PersonUserDefinedDetail.Medias:type_name -> trpc.media.personuserdefine.Media
	31, // 9: trpc.media.personuserdefine.DescribePersonCategoryResponse.Categories:type_name -> trpc.media.personuserdefine.PersonCategory
	24, // 10: trpc.media.personuserdefine.DescribeUserDefinePersonWithFeatureResponse.Persons:type_name -> trpc.media.personuserdefine.PersonUserDefinedDetail
	35, // 11: trpc.media.personuserdefine.PersonRevertResponse.CheckInfo:type_name -> trpc.media.personuserdefine.RevertTaskCheckInfo
	38, // 12: trpc.media.personuserdefine.DescribeRevertTasksResponse.TaskInfo:type_name -> trpc.media.personuserdefine.RevertTaskInfo
	24, // 13: trpc.media.personuserdefine.DescribeRevertTasksResponse.ExplicitPersonInfo:type_name -> trpc.media.personuserdefine.PersonUserDefinedDetail
	23, // 14: trpc.media.personuserdefine.DescribeRevertTasksResponse.MediaSet:type_name -> trpc.media.personuserdefine.Media
	24, // 15: trpc.media.personuserdefine.RevertCallBackInfo.ExplicitPersonInfo:type_name -> trpc.media.personuserdefine.PersonUserDefinedDetail
	23, // 16: trpc.media.personuserdefine.RevertCallBackInfo.MediaSet:type_name -> trpc.media.personuserdefine.Media
	0,  // 17: trpc.media.personuserdefine.UserDefinePerson.CreateUserDefineGroup:input_type -> trpc.media.personuserdefine.CreateUserDefineGroupRequest
	2,  // 18: trpc.media.personuserdefine.UserDefinePerson.DescribeUserDefineGroup:input_type -> trpc.media.personuserdefine.DescribeUserDefineGroupRequest
	5,  // 19: trpc.media.personuserdefine.UserDefinePerson.RemoveUserDefineGroup:input_type -> trpc.media.personuserdefine.RemoveUserDefineGroupRequest
	7,  // 20: trpc.media.personuserdefine.UserDefinePerson.UpdateUserDefineGroup:input_type -> trpc.media.personuserdefine.UpdateUserDefineGroupRequest
	9,  // 21: trpc.media.personuserdefine.UserDefinePerson.CreateUserDefinePerson:input_type -> trpc.media.personuserdefine.CreateUserDefinePersonRequest
	12, // 22: trpc.media.personuserdefine.UserDefinePerson.RemoveUserDefinePerson:input_type -> trpc.media.personuserdefine.RemoveUserDefinePersonRequest
	14, // 23: trpc.media.personuserdefine.UserDefinePerson.UpdateUserDefinePerson:input_type -> trpc.media.personuserdefine.UpdateUserDefinePersonRequest
	18, // 24: trpc.media.personuserdefine.UserDefinePerson.DescribeUserDefinePerson:input_type -> trpc.media.personuserdefine.DescribeUserDefinePersonRequest
	21, // 25: trpc.media.personuserdefine.UserDefinePerson.DescribeUserDefinePersonDetail:input_type -> trpc.media.personuserdefine.DescribeUserDefinePersonDetailRequest
	32, // 26: trpc.media.personuserdefine.UserDefinePerson.DescribeUserDefinePersonWithFeature:input_type -> trpc.media.personuserdefine.DescribeUserDefinePersonWithFeatureRequest
	25, // 27: trpc.media.personuserdefine.UserDefinePerson.CreatePersonCategory:input_type -> trpc.media.personuserdefine.CreatePersonCategoryRequest
	27, // 28: trpc.media.personuserdefine.UserDefinePerson.RemovePersonCategory:input_type -> trpc.media.personuserdefine.RemovePersonCategoryRequest
	29, // 29: trpc.media.personuserdefine.UserDefinePerson.DescribePersonCategory:input_type -> trpc.media.personuserdefine.DescribePersonCategoryRequest
	34, // 30: trpc.media.personuserdefine.UserDefinePerson.RevertPerson:input_type -> trpc.media.personuserdefine.PersonRevertRequest
	37, // 31: trpc.media.personuserdefine.UserDefinePerson.DescribeRevertTasks:input_type -> trpc.media.personuserdefine.DescribeRevertTasksRequest
	1,  // 32: trpc.media.personuserdefine.UserDefinePerson.CreateUserDefineGroup:output_type -> trpc.media.personuserdefine.CreateUserDefineGroupResponse
	4,  // 33: trpc.media.personuserdefine.UserDefinePerson.DescribeUserDefineGroup:output_type -> trpc.media.personuserdefine.DescribeUserDefineGroupResponse
	6,  // 34: trpc.media.personuserdefine.UserDefinePerson.RemoveUserDefineGroup:output_type -> trpc.media.personuserdefine.RemoveUserDefineGroupResponse
	8,  // 35: trpc.media.personuserdefine.UserDefinePerson.UpdateUserDefineGroup:output_type -> trpc.media.personuserdefine.UpdateUserDefineGroupResponse
	11, // 36: trpc.media.personuserdefine.UserDefinePerson.CreateUserDefinePerson:output_type -> trpc.media.personuserdefine.CreateUserDefinePersonResponse
	13, // 37: trpc.media.personuserdefine.UserDefinePerson.RemoveUserDefinePerson:output_type -> trpc.media.personuserdefine.RemoveUserDefinePersonResponse
	15, // 38: trpc.media.personuserdefine.UserDefinePerson.UpdateUserDefinePerson:output_type -> trpc.media.personuserdefine.UpdateUserDefinePersonResponse
	20, // 39: trpc.media.personuserdefine.UserDefinePerson.DescribeUserDefinePerson:output_type -> trpc.media.personuserdefine.DescribeUserDefinePersonResponse
	22, // 40: trpc.media.personuserdefine.UserDefinePerson.DescribeUserDefinePersonDetail:output_type -> trpc.media.personuserdefine.DescribeUserDefinePersonDetailResponse
	33, // 41: trpc.media.personuserdefine.UserDefinePerson.DescribeUserDefinePersonWithFeature:output_type -> trpc.media.personuserdefine.DescribeUserDefinePersonWithFeatureResponse
	26, // 42: trpc.media.personuserdefine.UserDefinePerson.CreatePersonCategory:output_type -> trpc.media.personuserdefine.CreatePersonCategoryResponse
	28, // 43: trpc.media.personuserdefine.UserDefinePerson.RemovePersonCategory:output_type -> trpc.media.personuserdefine.RemovePersonCategoryResponse
	30, // 44: trpc.media.personuserdefine.UserDefinePerson.DescribePersonCategory:output_type -> trpc.media.personuserdefine.DescribePersonCategoryResponse
	36, // 45: trpc.media.personuserdefine.UserDefinePerson.RevertPerson:output_type -> trpc.media.personuserdefine.PersonRevertResponse
	39, // 46: trpc.media.personuserdefine.UserDefinePerson.DescribeRevertTasks:output_type -> trpc.media.personuserdefine.DescribeRevertTasksResponse
	32, // [32:47] is the sub-list for method output_type
	17, // [17:32] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_person_user_define_proto_init() }
func file_person_user_define_proto_init() {
	if File_person_user_define_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_person_user_define_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserDefineGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserDefineGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeUserDefineGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDefineGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeUserDefineGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveUserDefineGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveUserDefineGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserDefineGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserDefineGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserDefinePersonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageCheckInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserDefinePersonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveUserDefinePersonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveUserDefinePersonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserDefinePersonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserDefinePersonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterBy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortBy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeUserDefinePersonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersonUserDefined); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeUserDefinePersonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeUserDefinePersonDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeUserDefinePersonDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Media); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersonUserDefinedDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePersonCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePersonCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePersonCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePersonCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribePersonCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribePersonCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersonCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeUserDefinePersonWithFeatureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeUserDefinePersonWithFeatureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersonRevertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevertTaskCheckInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersonRevertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeRevertTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevertTaskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeRevertTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_user_define_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevertCallBackInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_person_user_define_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_person_user_define_proto_msgTypes[18].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_person_user_define_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_person_user_define_proto_goTypes,
		DependencyIndexes: file_person_user_define_proto_depIdxs,
		MessageInfos:      file_person_user_define_proto_msgTypes,
	}.Build()
	File_person_user_define_proto = out.File
	file_person_user_define_proto_rawDesc = nil
	file_person_user_define_proto_goTypes = nil
	file_person_user_define_proto_depIdxs = nil
}
